<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>zhanglijie博客</title>
  
  <subtitle>当你的才华还撑不起你的野心的时候，你就应该静下心来，学习;当你的能力还驾驭不了你的目标时，就应该沉下心来，历练</subtitle>
  <link href="/zljx.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/zljx/zljx.github.io.git/"/>
  <updated>2019-11-21T12:56:03.529Z</updated>
  <id>https://github.com/zljx/zljx.github.io.git/</id>
  
  <author>
    <name>zljx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java：素数</title>
    <link href="https://github.com/zljx/zljx.github.io.git/2019/11/21/Java%EF%BC%9A%E7%B4%A0%E6%95%B0/"/>
    <id>https://github.com/zljx/zljx.github.io.git/2019/11/21/Java%EF%BC%9A%E7%B4%A0%E6%95%B0/</id>
    <published>2019-11-21T12:54:20.000Z</published>
    <updated>2019-11-21T12:56:03.529Z</updated>
    
    <content type="html"><![CDATA[<p>java 输入N以内的全部素数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package ex3;</span><br><span class="line">import java.util.*;</span><br><span class="line">public class Sushu &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">@SuppressWarnings(&quot;resource&quot;)</span><br><span class="line">Scanner reader=new Scanner(System.in);</span><br><span class="line">int n=reader.nextInt();</span><br><span class="line"></span><br><span class="line">if(n&gt;=2)</span><br><span class="line">&#123;</span><br><span class="line">System.out.printf(2+&quot; &quot;);</span><br><span class="line">for(int i=3;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">int s=1;</span><br><span class="line">for(int j=2;j&lt;i;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(i%j==0)</span><br><span class="line">&#123;</span><br><span class="line">s=0;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(s!=0)</span><br><span class="line">System.out.printf(i+&quot; &quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;java 输入N以内的全部素数&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://github.com/zljx/zljx.github.io.git/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>数据结构栈</title>
    <link href="https://github.com/zljx/zljx.github.io.git/2019/11/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A0%88/"/>
    <id>https://github.com/zljx/zljx.github.io.git/2019/11/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A0%88/</id>
    <published>2019-11-17T07:44:20.000Z</published>
    <updated>2019-11-17T07:45:30.344Z</updated>
    
    <content type="html"><![CDATA[<p>#数据结构<br>##顺序栈</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define MAX 10</span><br><span class="line">typedef struct&#123;</span><br><span class="line">int base;</span><br><span class="line">int top;</span><br><span class="line">int s[MAX];</span><br><span class="line">&#125;SqStack;</span><br><span class="line"></span><br><span class="line">//基本操作说明</span><br><span class="line">void InitStack(SqStack &amp;S);</span><br><span class="line">void push(SqStack &amp;S,int e);</span><br><span class="line">void pop(SqStack &amp;S,int &amp;e);</span><br><span class="line"></span><br><span class="line">//基本操作的算法描述</span><br><span class="line">void InitStack(SqStack &amp;S)</span><br><span class="line">&#123;</span><br><span class="line">S.base=S.top=0;</span><br><span class="line">&#125;</span><br><span class="line">void push(SqStack &amp;S,int e)</span><br><span class="line">&#123;</span><br><span class="line">if(S.top==MAX)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;&quot;栈满&quot;&lt;&lt;endl;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">S.s[S.top]=e;</span><br><span class="line">S.top+=1;</span><br><span class="line">&#125;</span><br><span class="line">void pop(SqStack &amp;S,int &amp;e)</span><br><span class="line">&#123;</span><br><span class="line">if(S.top==0)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;&quot;栈空&quot;&lt;&lt;endl;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">S.top-=1;</span><br><span class="line">e=S.s[S.top];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void print(SqStack S)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;&quot;栈的各个元素如下：&quot;&lt;&lt;endl;</span><br><span class="line">for(int i=0;i&lt;S.top;i++)</span><br><span class="line">cout&lt;&lt;S.s[i]&lt;&lt;&apos; &apos;;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">SqStack S;</span><br><span class="line">//初始化</span><br><span class="line">cout&lt;&lt;&quot;初始化栈&quot;&lt;&lt;endl;</span><br><span class="line">InitStack(S);</span><br><span class="line">cout&lt;&lt;&quot;栈底和栈顶：&quot;&lt;&lt;S.base&lt;&lt;&apos;,&apos;&lt;&lt;S.top&lt;&lt;endl;</span><br><span class="line">//入栈</span><br><span class="line">cout&lt;&lt;&quot;5个元素入栈\n&quot;;</span><br><span class="line">for(int i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">push(S,2*i+i);</span><br><span class="line">cout&lt;&lt;&quot;栈顶为：&quot;&lt;&lt;S.top&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">print(S);</span><br><span class="line">//出栈</span><br><span class="line">int x;</span><br><span class="line">pop(S,x);</span><br><span class="line">cout&lt;&lt;&quot;出栈元素为:&quot;&lt;&lt;x&lt;&lt;&quot;栈顶&quot;&lt;&lt;S.top&lt;&lt;endl;</span><br><span class="line">print(S);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#数据结构&lt;br&gt;##顺序栈&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2
      
    
    </summary>
    
    
    
      <category term="顺序栈" scheme="https://github.com/zljx/zljx.github.io.git/tags/%E9%A1%BA%E5%BA%8F%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>数据结构顺序表</title>
    <link href="https://github.com/zljx/zljx.github.io.git/2019/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%A1%BA%E5%BA%8F%E8%A1%A8/"/>
    <id>https://github.com/zljx/zljx.github.io.git/2019/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%A1%BA%E5%BA%8F%E8%A1%A8/</id>
    <published>2019-11-13T13:38:42.000Z</published>
    <updated>2019-11-13T13:41:53.512Z</updated>
    
    <content type="html"><![CDATA[<p>顺序表的插入、删除、遍历</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define MAX 15</span><br><span class="line"></span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">int elem[MAX];</span><br><span class="line">int length;</span><br><span class="line">&#125;Sqlist;</span><br><span class="line"></span><br><span class="line">void Initlist_sq(Sqlist &amp;L);</span><br><span class="line">void ListInsert_sq(Sqlist &amp;L,int i,int e);</span><br><span class="line">void ListDel_sq(Sqlist &amp;L,int i,int &amp;e);</span><br><span class="line">void print_sq(Sqlist L);</span><br><span class="line"></span><br><span class="line">//函数的定义</span><br><span class="line">void Initlist_sq(Sqlist &amp;L)//定义空链表</span><br><span class="line">&#123;</span><br><span class="line">L.length=0;</span><br><span class="line">&#125;</span><br><span class="line">void ListInsert_sq(Sqlist &amp;L,int i,int e)//插入元素</span><br><span class="line">&#123;</span><br><span class="line">int *q,*p;</span><br><span class="line">if(i&lt;1||i&gt;L.length) return;</span><br><span class="line">q=&amp;L.elem[i-1];//插入位置</span><br><span class="line">for(p=&amp;L.elem[L.length-1];p&gt;=q;--p)</span><br><span class="line">*(p+1)=*p;</span><br><span class="line">*q=e;</span><br><span class="line">++L.length;</span><br><span class="line">return;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> void ListDel_sq(Sqlist &amp;L,int i,int &amp;e)//删除元素</span><br><span class="line">&#123;</span><br><span class="line">if(i&lt;1||i&gt;L.length) return;</span><br><span class="line">e=L.elem[i-1];</span><br><span class="line">for(int j=i;j&lt;L.length;j++)</span><br><span class="line">L.elem[j-1]=L.elem[j];</span><br><span class="line">--L.length;</span><br><span class="line">&#125;</span><br><span class="line">void print_sq(Sqlist L)</span><br><span class="line">&#123;</span><br><span class="line">int *p,*q=&amp;L.elem[L.length-1];//指向尾元素的位置</span><br><span class="line">for(p=L.elem;p&lt;=q;p++)</span><br><span class="line">cout&lt;&lt;*p&lt;&lt;&apos; &apos;;</span><br><span class="line">cout&lt;&lt;&quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a[11]=&#123;10,20,30,40,50,60,70,80,90,100&#125;;</span><br><span class="line">Sqlist L;</span><br><span class="line"></span><br><span class="line">//初始化顺序表</span><br><span class="line">Initlist_sq(L);</span><br><span class="line">cout&lt;&lt;&quot;现在的表长为：&quot;&lt;&lt;L.length&lt;&lt;endl;</span><br><span class="line">//插入10个元素</span><br><span class="line">for(int i=1;i&lt;=10;i++)</span><br><span class="line">ListInsert_sq(L,i,a[i-1]);</span><br><span class="line">cout&lt;&lt;&quot;现在的表长为：&quot;&lt;&lt;L.length&lt;&lt;endl;</span><br><span class="line">//遍历</span><br><span class="line">print_sq(L);</span><br><span class="line">cout&lt;&lt;&quot;现在的表长为：&quot;length&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">//删除第5个元素</span><br><span class="line">int x;</span><br><span class="line">ListDel_sq(L,5,x);</span><br><span class="line">cout&lt;&lt;&quot;删除的元素是：&quot;&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;&quot;删除第 5 个元素后的表：&quot;&lt;&lt;endl;</span><br><span class="line">print_sq(L);</span><br><span class="line">cout&lt;&lt;&quot;现在的表长为：&quot;&lt;&lt;endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;顺序表的插入、删除、遍历&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
    
    
      <category term="数据结构" scheme="https://github.com/zljx/zljx.github.io.git/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Java String</title>
    <link href="https://github.com/zljx/zljx.github.io.git/2019/11/12/Java-String/"/>
    <id>https://github.com/zljx/zljx.github.io.git/2019/11/12/Java-String/</id>
    <published>2019-11-12T11:42:49.000Z</published>
    <updated>2019-11-12T13:34:01.792Z</updated>
    
    <content type="html"><![CDATA[<p>编写一个Java应用程序，实现如下功能：</p><p>（1） 判断两个字符串是否相同，s1=”you are a student”，s2=”how are you”；</p><p>（2） 判断字符串”22030219851022024”的前缀、后缀是否和某个字符串”220302”相同；</p><p>（3） 按字典顺序比较两个字符串”你”和”我”的大小关系；</p><p>（4） 将数字型字符串”100”和”123.678”转换为数字；</p><p>（5） 将字符串”FEDCBA”存放到数组中，调用for循环读出数组数据显示在屏幕上。<br>————————————————</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">package string;</span><br><span class="line"></span><br><span class="line">public class Ex1 &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">//判断两字符是否相等</span><br><span class="line">String s1=new String(&quot;you are a strdent&quot;),</span><br><span class="line">s2=new String(&quot;how are you&quot;);</span><br><span class="line">if(s1.equals(s2))&#123;</span><br><span class="line">System.out.println(&quot;s1与s2相同&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">System.out.println(&quot;s1与s2不相同&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//判断两字符的前缀是否相同</span><br><span class="line">String s3=new String(&quot;220302199911225720&quot;);</span><br><span class="line">if(s3.startsWith(&quot;220302&quot;))&#123;</span><br><span class="line">System.out.println(&quot;吉林省的身份证&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//按字典顺序排序</span><br><span class="line">String s4=new String(&quot;你&quot;),</span><br><span class="line">s5=new String(&quot;我&quot;);</span><br><span class="line">if(s4.compareTo(s5)&gt;0)&#123;</span><br><span class="line">System.out.println(&quot;按字典序，s4大于s5&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">System.out.println(&quot;按字典序，s4小于s5&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//检索字符的位置</span><br><span class="line">int position=0;</span><br><span class="line">String path=&quot;C:\\java\\jsp\\A.java&quot;;//因为一个“\”+“字母”，会出现转义的意思，所以加两个“\”</span><br><span class="line">position=path.lastIndexOf(&quot;\\&quot;);//获取path中最后出现目录分隔符的位置</span><br><span class="line">System.out.println(&quot;C:\\java\\jsp\\A.java 中最后出现的位置&quot;+position);</span><br><span class="line"></span><br><span class="line">//将字符型的数字，转换成int或double类的能计算的数据</span><br><span class="line">String fileName=path.substring(12);</span><br><span class="line">System.out.println(&quot;C:\\java\\jsp\\A.java 中含有的文件名：&quot;+fileName);</span><br><span class="line">String s6=new String(&quot;100&quot;), s7=new String(&quot;123.678&quot;);</span><br><span class="line">int n1=Integer.parseInt(s6);//将s6转化成int型数据</span><br><span class="line">double n2=Double.parseDouble(s7);//将s7转化成double型数据</span><br><span class="line">double m=n1+n2;</span><br><span class="line">System.out.println(m);</span><br><span class="line"></span><br><span class="line">//字符型数字与能计算的数字之间的相互转化</span><br><span class="line">String s8=String.valueOf(m);//将数字改成字符型，string调用valueof（int n）方法将m转化为字符串对象，也可以使用Double to String();</span><br><span class="line">position=s8.indexOf(&quot;.&quot;);//从“.”后开始检索</span><br><span class="line">String temp=s8.substring(position+1);</span><br><span class="line">System.out.println(&quot;数字&quot;+m+&quot;有&quot;+temp.length()+&quot;为小数&quot;);</span><br><span class="line"></span><br><span class="line">//将字符串放到数组中</span><br><span class="line">String s9=new String(&quot;ABCDEF&quot;);</span><br><span class="line">char a[]=s9.toCharArray();//将s9存放到数组a中</span><br><span class="line">for(int i=a.length-1;i&gt;=0;i--)&#123;</span><br><span class="line">System.out.printf(&quot;%3c&quot;,a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>1、int compareTo(String anotherString)   //按字典顺序比较两个字符串。返回值为一个数字 2、int indexOf(int ch)      //返回指定字符在此字符串中第一次出现处的索引。最后结果是一个字符   int lastIndexOf(int ch)  // 返回指定字符在此字符串中最后一次出现处的索引。返回结果为int型的数字3、String substring(int beginIndex, int endIndex)//从原字符串截取一个子串，注：不能截到endIndex，只能截到他的前一位    4、int n1=Integer.parseInt(s6);      //将s6转化成int型数据   double n2=Double.parseDouble(s7);  //将s7转化成double型数据   String valueOf(int i)      //返回 int 参数的字符串表示形式,将数字转化为字符5、String s9=new String(&quot;ABCDEF&quot;);   char a[]=s9.toCharArray();//将s9存放到数组a中</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;编写一个Java应用程序，实现如下功能：&lt;/p&gt;
&lt;p&gt;（1） 判断两个字符串是否相同，s1=”you are a student”，s2=”how are you”；&lt;/p&gt;
&lt;p&gt;（2） 判断字符串”22030219851022024”的前缀、后缀是否和某个字符串”22
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://github.com/zljx/zljx.github.io.git/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java:接口</title>
    <link href="https://github.com/zljx/zljx.github.io.git/2019/11/11/Java-%E6%8E%A5%E5%8F%A3/"/>
    <id>https://github.com/zljx/zljx.github.io.git/2019/11/11/Java-%E6%8E%A5%E5%8F%A3/</id>
    <published>2019-11-11T13:29:49.000Z</published>
    <updated>2019-11-11T13:30:27.350Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">package hello;</span><br><span class="line"></span><br><span class="line">public class Student &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">ComputeTotalSales[] goods=new ComputeTotalSales[50];</span><br><span class="line">for(int i=0;i&lt;goods.length;i++)&#123;</span><br><span class="line">if(i%3==0)</span><br><span class="line">goods[i]=new Television();</span><br><span class="line">else if(i%3==1)</span><br><span class="line">goods[i]=new Computer();</span><br><span class="line">else if(i%3==2)</span><br><span class="line">goods[i]=new Mobile();</span><br><span class="line">&#125;</span><br><span class="line">Shop shop=new Shop(goods);</span><br><span class="line">System.out.println(&quot;商店年销售额：&quot;+shop.giveTotalSales());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">interface ComputeTotalSales&#123;</span><br><span class="line">public double totalSalesByYear();</span><br><span class="line">&#125;</span><br><span class="line">class Television implements ComputeTotalSales &#123;</span><br><span class="line">public double totalSalesByYear()&#123;</span><br><span class="line">return 80000.0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">class Computer implements ComputeTotalSales &#123;</span><br><span class="line">public double totalSalesByYear()&#123;</span><br><span class="line">return 40000.0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">class Mobile implements ComputeTotalSales &#123;</span><br><span class="line">public double totalSalesByYear()&#123;</span><br><span class="line">return 20000.0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">class Shop&#123;</span><br><span class="line">ComputeTotalSales[] goods;</span><br><span class="line">double totalSales=0;</span><br><span class="line">Shop(ComputeTotalSales[] goods)&#123;</span><br><span class="line">this.goods=goods;</span><br><span class="line">&#125;</span><br><span class="line">public double giveTotalSales()&#123;</span><br><span class="line">totalSales=0;</span><br><span class="line">for(int i=0;i&lt;goods.length;i++)</span><br><span class="line">totalSales=totalSales+goods[i].totalSalesByYear();</span><br><span class="line">return totalSales;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://github.com/zljx/zljx.github.io.git/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java:上转型对象</title>
    <link href="https://github.com/zljx/zljx.github.io.git/2019/11/11/Java-%E4%B8%8A%E8%BD%AC%E5%9E%8B%E5%AF%B9%E8%B1%A1/"/>
    <id>https://github.com/zljx/zljx.github.io.git/2019/11/11/Java-%E4%B8%8A%E8%BD%AC%E5%9E%8B%E5%AF%B9%E8%B1%A1/</id>
    <published>2019-11-11T13:04:01.000Z</published>
    <updated>2019-11-11T13:24:05.270Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">package hello;</span><br><span class="line"></span><br><span class="line">public class Ex2 &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">A a;</span><br><span class="line">B b=new B();</span><br><span class="line">a=b;</span><br><span class="line">System.out.println(&quot;两数之和为：&quot;+a.f1(3, 5));</span><br><span class="line">System.out.println(&quot;两数之差为：&quot;+a.f2(3,4));</span><br><span class="line">A c;</span><br><span class="line">C d=new C();</span><br><span class="line">c=d;</span><br><span class="line">System.out.println(&quot;两数之积为：&quot;+c.f1(3, 5));</span><br><span class="line">System.out.println(&quot;两数的平方和为：&quot;+c.f2(3,4));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">abstract class A&#123;</span><br><span class="line">public abstract int f1(int x,int y);</span><br><span class="line">public abstract double f2(double x,double y); </span><br><span class="line">&#125;</span><br><span class="line">class B extends A&#123;</span><br><span class="line">public int f1(int x,int y)&#123;</span><br><span class="line">return x+y;</span><br><span class="line">&#125;</span><br><span class="line">public double f2(double x,double y)&#123;</span><br><span class="line">return x-y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">class C extends A&#123;</span><br><span class="line">public int f1(int x,int y)&#123;</span><br><span class="line">return x*y;</span><br><span class="line">&#125;</span><br><span class="line">public double f2(double x,double y)&#123;</span><br><span class="line">return x*x+y*y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="Java" scheme="https://github.com/zljx/zljx.github.io.git/categories/Java/"/>
    
    
      <category term="java" scheme="https://github.com/zljx/zljx.github.io.git/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/zljx/zljx.github.io.git/2019/11/11/hello-world/"/>
    <id>https://github.com/zljx/zljx.github.io.git/2019/11/11/hello-world/</id>
    <published>2019-11-11T12:07:19.325Z</published>
    <updated>2019-11-13T05:44:25.626Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
